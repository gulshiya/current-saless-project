<Activity mc:Ignorable="sap sap2010" x:Class="Initialize_Applications" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="CountRows" Type="OutArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>852,518</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Initialization_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="42">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Open applications used in the process and do necessary initialization procedures (e.g., login)." DisplayName="Initialize All Applications" sap:VirtualizedContainerService.HintSize="376,221" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke All_Technologies workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Tests/JobPortal/All_Technologies.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="indeedURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;indeedURL&quot;).ToString" />
        </InArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="CountRows">
          <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="CountRows" />
        </OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Glassdoor">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GlassdoorURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="CompanyNames">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;CompanyNames&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="GlassdoorUsername">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GlassdoorUsername&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="GlassdoorPwd">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GlassdoorPwd&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="SimplyHiredURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;SimplyHiredURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="LinkedInURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LinkedInURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="RemotelyAwesomeJobs">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;RemotelyAwesomeJobsURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="DiceURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;DiceURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="MonsterURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MonsterURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="WowJobsURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;WowJobsURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="MonsterCanadaURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MonsterCanadaURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="indeedCanadaURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;indeedCanadaURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ElutaURL">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;ElutaURL&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="AllTechnologiesList__FilePath">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;AllTechnologiesList_FilePath&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="SheetName_AllTechnologies">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;All Technologies_Sheetname&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Output_SingleFile">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;SingleFile_path&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="GlassdoorDatePosted">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GlassdoorDatePosted&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="LinkedInDatePosted">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;LinkedInDatePosted&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="DiceDatePosted">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;DiceDatePosted&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="MonsterDatePosted">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;MonsterDatePosted&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="UnitedSates">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;UnitedSates&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="Canada">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;Canada&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="WowJobsDatePosted">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;WowJobsDatePosted&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="IndeedDatePosted">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;IndeedDatePosted&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="IndeedcaDate_Posted">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;IndeedcaDate_Posted&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="SimplyHiredDatePosted">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;SimplyHiredDatePosted&quot;).ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>